#+TITLE: Project Euler Problems
#+AUTHOR: Syed Paymaan Raza

Trying out some [[https://projecteuler.net/archives][project euler problems]] here. Mostly I do this
to learn a language. It's been a while since I coded in Python
so I thought to implement a few project euler problem solutions.
I have done a few before so hopefully this should be relatively
quick.

Used Python cheat sheets to revise concepts:
1) [[https://ehmatthes.github.io/pcc/cheatsheets/README.html][Matthes Python Cheat Sheets]]
2) [[https://github.com/ehmatthes/pcc/releases/download/v1.0.0/beginners_python_cheat_sheet_pcc_all.pdf][Matthes Python Cheat Sheets - ALL]]
3) [[https://perso.limsi.fr/pointal/_media/python:cours:mementopython3-english.pdf][Limsi Python Cheat Sheet]]
4) [[https://www.cheatography.com/davechild/cheat-sheets/python/][Dave Child Python Cheat Sheet]]

Remember, in Python, whitespace matters!

** [[https://projecteuler.net/problem%3D1][Multiples of 3 and 5]]
#+BEGIN_SRC python :results output :exports both
def is_multiple_of(num, divisor):
    return num % divisor == 0

def p1():
    sum = 0
    for i in range(0, 1000):
        if is_multiple_of(i, 3) or is_multiple_of(i, 5):
            sum += i
    return sum
         
print(p1())
#+END_SRC

#+RESULTS:
: 233168

Time complexity: O(n) where n = 1000; so really O(1) unless
we want 1000 to be variable.
Space complexity: O(1)

Another approach using list comprehensions:
#+BEGIN_SRC python :results output :exports both
def is_multiple_of(num, divisor):
    return num % divisor == 0

def p1_list_comprehensions():
    return sum(x for x in range(1000) if is_multiple_of(x, 3) or is_multiple_of(x, 5))

print(p1_list_comprehensions())
#+END_SRC

#+RESULTS:
: 233168

